{"home":{"content":"# Lecture 7: Front-End Frameworks\n---\n\nWelcome to Lecture 7! Here's a brief breakdown of today's class.\n\n#### Learning Objectives\n---\n\n1. Understand how to build multilayered grids with a Front-End Framework\n2. Understand how we can override the default styles of a framework with our own CSS\n\n#### Rundown\n---\n\n#### [Frontend Frameworks](#frontend-frameworks)\n#### [Grids](#grids)\n#### [Resume Lab](#resume-lab)\n#### [Styling for various Screens](#styling-for-various-screens)\n#### (Time Permitting)\n#### [JavaScript Basics](#javascript-basics)\n","idx":0},"title":{"content":"Front-End Frameworks","idx":1},"desc":{"content":"Use FE Frameworks to build websites quickly","idx":2},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n\n**Learning Objective**: What are front-end frameworks and how do they allow us to create modern, professional looking websites?\n\n#### Exercise\n---\n\nLet's get a simple site going that pulls in one of the following frameworks. Let's then use the documentation to build out a simple UI element using that framework.\n\n---\n\nFrameworks are basically CSS stylesheets that were developed by other people. They are built in such a way that you don't have to spend time and energy building out commonly reusable components like **buttons** and **input fields**, etc\n\n#### Semantic UI\n---\nSome quick facts:\n\n* They write the CSS and HTML blocks for you, all you do is copy and paste\n* With a basic understanding of HTML/CSS, you can easily start building professional looking websites\n\n**Visit their [website](http://semantic-ui.com/).**\n\n**Read the [docs](http://semantic-ui.com/introduction/getting-started.html).**\n\n#### Material Design\n---\nSome quick facts:\n\n* Built by Google.\n* Follows the Material Design spec that a lot of new Google apps now implement (like Google Calendar, Google Inbox, etc).\n\n**Visit their [website](https://getmdl.io/).**\n\n#### Bootstrap\n---\n\nSome quick facts:\n\n* Built by your boys over @twitter, it is a framework for quickly building out complex webpages\n* Probably **the** most popular front-end framework.\n\n**Visit their [website](http://getbootstrap.com/).**\n\n**Read the [docs](http://getbootstrap.com/getting-started/).**\n\n#### Primer\n---\n\nSome quick facts:\n\n* Build by your boys over @github\n* Much simpler than bootstrap\n* Lighter weight too!\n\n**Visit their [website](http://primercss.io/).**\n","idx":3},"grids":{"content":"# Grids\n---\n\n**Learning Objective**: How can we assemble useful grid layouts with a front-end framework?\n\n#### Exercise\n---\n\nLet's see if we can rebuild our layouts using a frontend framework.\n\nCreate a [new project](http://fewdmaterials.github.io/boilerplates/) and then using the documentation provided by your chosen frontend framework, rebuild the following layouts. \n\n**NOTE**: you will likely have to add some of your own CSS styles here as well to achieve the gray boxes and min-heights.\n\n#### Simple Layout\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout1.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout1.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n\n<p></p><p></p>\n\n#### Three Column Layout\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout2.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout2.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>\n\n\n\n#### Simple Marketing\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout3.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout3.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n<p></p><p></p>\n\n\n#### Marketing with Nav\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout4.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout4.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>\n\n\n\n#### Magazine\n\n\n<a href=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout5.png\" target=\"_blank\">\n<img src=\"https://raw.githubusercontent.com/FEWDMaterials/FEWD629_Lecture5/master/Layouts/Layout5.png\" style=\"width: 100%; height: auto;\">\n</a>\n\n\n<p></p><p></p>","idx":4},"resume-lab":{"content":"# Resume Lab\n---\n\n**Learning Objective**: How can we build a professional looking website with a frontend framework?\n\n#### Exercise\n---\n\nLet's revisit our resume page. We will create a resume webpage using Semantic UI.\n\n---\n\n#### Requirements\n\nOpen ended! Let's have fun with this and use our exploration as an excuse to learn more about the modules offered by Semantic UI.\n","idx":5},"styling-for-various-screens":{"content":"# Styling for various Screens\n---\n\n**Learning Objective**: Understand how to apply CSS towards building web layouts that work in multiple screens.\n\n#### Exercise\n---\n\nRefactor your resume website so that it looks good and accessible on mobile screens. This usually means setting a smaller width on your content and perhaps updating font sizes. If you have an column grids you will probably want to stack them.\n\n---\n\nWe can write CSS that will allow us to format our data layouts so that it adheres properly to multiple screen sizes.\n\n#### Basics\n---\n* We want to have the SAME markup for ALL of our webviews\n* A website is responsive if the site layout changes based on the width of the browser pages but can compensate for any width.\n* A website is adaptive if the site layout changes based on the width of the browser but only for predetermined widths.\n* [Examples](http://socialdriver.com/2013/06/10/50-best-responsive-website-design-examples-of-2013/) of responsive sites\n* Always place this in your HTML\n\n```html\n<html>\n    <head>\n        ...\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0;\">\n        ...\n    </head>\n    ...\n</html>\n```\n\n#### Mobile First VS. Desktop First\n---\nThese two schemas are techniques for how we structure our css.\n\n**Most important takeaway**: almost always go with mobile first.\n\n \n* Remember, CSS is cascading which means that we can write one set of styles and then reapply other styles on top of that.\n\n#### Mobile First\n\nWith mobile first, we create the mobile layout first, then add a media query for tablet (with tablet styles) and then add a media query for desktop (with desktop styles)\n\n#### Desktop First\n\nWith desktop first, we create the desktop layout first (so styles for desktop), then add a media query for tablet, then mobile.\n\n#### Mobile First > Desktop First\n**Here's why**:\nforces you to think about the stuff that's really necessary for simplest version of your page and implement those\n\n\n* With mobile first, you simply add styles as needed as width increases (vs removing styles the other way around, which leads to writing more code)\n\n#### Examples\n---\nHere are some examples of different media queries.\n\n* #### [Basic Example; Mobile first](http://fewd.us/howdoi/#/problem/4080)\n\n* #### [Basic; Desktop first](http://fewd.us/howdoi/#/problem/4081)\n\n* #### [AND-ing](http://fewd.us/howdoi/#/problem/4082)\n\n* #### [OR-ing](http://fewd.us/howdoi/#/problem/4083)\n\n* #### [Buckets](http://fewd.us/howdoi/#/problem/4084)\n\n* #### [Overriding](http://fewd.us/howdoi/#/problem/4085)\n\n#### Common Breakpoints\n---\n**NOTE**: you should **NEVER** design for device specificity. Read [this](https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints).\n\n```css\n/* Smartphones (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {\n/* Styles */\n}\n\n/* Smartphones (landscape) ----------- */\n@media only screen and (min-width : 321px) {\n/* Styles */\n}\n\n/* Smartphones (portrait) ----------- */\n@media only screen and (max-width : 320px) {\n/* Styles */\n}\n\n/* iPads (portrait and landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {\n/* Styles */\n}\n\n/* iPads (landscape) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {\n/* Styles */\n}\n\n/* iPads (portrait) ----------- */\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) {\n/* Styles */\n}\n/**********\niPad 3\n**********/\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n/* Desktops and laptops ----------- */\n@media only screen  and (min-width : 1224px) {\n/* Styles */\n}\n\n/* Large screens ----------- */\n@media only screen  and (min-width : 1824px) {\n/* Styles */\n}\n\n/* iPhone 4 ----------- */\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n@media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {\n/* Styles */\n}\n\n/* iPhone 5 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6 ----------- */\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* iPhone 6+ ----------- */\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S3 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){\n/* Styles */\n}\n\n/* Samsung Galaxy S4 ----------- */\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n/* Samsung Galaxy S5 ----------- */\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n\n@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){\n/* Styles */\n}\n```\n","idx":6},"javascript-basics":{"content":"# JavaScript Basics\n---\n\nLet's begin by defining what javascript actually is, how we can load javascript into our webpages, and how we can write a few lines of super basic javascript syntax.\n\n## [JS Global Notes](http://samantha.fewd.us/#fork/mottaquikarim/PFNP_Javascript) | [LIVE Instructor View](http://samantha.fewd.us/#broadcast/mottaquikarim/PFNP_Javascript)\n\n#### Learning Objectives\n---\n1. What can we do with javascript code?\n2. How can we load javascript code into our browser?\n3. What are the different ways we can store, retrieve, and use data in javascript?\n\n#### Exercise\n---\n\nWe want to learn enough javascript to be able to solve the following PSET.\n\n#### [Basic Vars Review](http://samantha.fewd.us/#fork/mottaquikarim/Basic_Vars_Review) | [LIVE Instructor View](http://samantha.fewd.us/#broadcast/mottaquikarim/Basic_Vars_Review)\n\nThis will help you get your fingers warm re: simple javascript variable declarations.\n\n#### What is JavaScript\n---\nOriginally called **Mocha**, then **LiveScript**, then renamed to **JavaScript**.\n\n2. It's a subclass of ECMAScript, a standardization maintained by Ecma International\n3. Basically, Ecma is the **Webster's Dictionary** of JavaScript\n\n### What can you do with Javascript?\n\nJavaScript runs in the <strong>browser</strong>, meaning it is used heavily in user-interaction.\nIn other words, with javascript, you can...\n\n#### Animate stuff\n---\nYou can use javascript to create for example an infinite random prop loop.\n\n<iframe scrolling='no' src='//codepen.io/mottaquikarim/embed/jgIbd/?height=268&theme-id=820&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='min-height: 268px !important;'>See the Pen <a href='http://codepen.io/mottaquikarim/pen/jgIbd/'>jQuery Random Height/Width</a> by Mottaqui Karim (<a href='http://codepen.io/mottaquikarim'>@mottaquikarim</a>) on <a href='http://codepen.io'>CodePen</a>.\n</iframe>\n\n#### Allow the user to control stuff\n---\nYou can allow the user to take control of a UI element and dictate its state.\n\n<iframe height=\"300\" src=\"//jsfiddle.net/2jwnjwfd/1/embedded/result\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### Mess with people's minds\n---\nThis is just a pretty cool masking example that is actually pretty hard to pull off with web dev tech (but can be done, as shown here thanks to javascript).\n\n(**FYI**: this formed the basis of [this website](http://maveron.com/) that I built back in the day).\n\n<iframe scrolling='no' src='//codepen.io/mottaquikarim/embed/DABIG/?height=268&theme-id=820&default-tab=result' frameborder='no' allowtransparency='true' allowfullscreen='true' style='min-height: 268px !important;'>See the Pen <a href='http://codepen.io/mottaquikarim/pen/DABIG/'>Mask Effect demo</a> by Mottaqui Karim (<a href='http://codepen.io/mottaquikarim'>@mottaquikarim</a>) on <a href='http://codepen.io'>CodePen</a>.\n</iframe>\n\n#### Determine the state of something on a page in real time\n---\nWe are using something called conditionals here.\n\n<iframe width=\"100%\" height=\"500\" style=\"height: 400px;\" src=\"//jsfiddle.net/hrfq4qrj/1/embedded/result\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### Load in data dynamically (this is the best one)\n---\nBasically, we can interact with API data without ever reloading the page!\n\n#### Linking to Javascript\n---\nBefore we begin, let us do some basic bookkeepping.\n\n**How do we set up javascript to run in the browser?**\n\n1. The precedent is similar to what we do to link CSS files &mdash; we employ a tag to tell the HTML page where the javascript code for that page lives.\n\n2. However, we do NOT use the link tag...\n\n3. Instead, we do the following:\n\n```html\n<!doctype html>\n<html>\n\t<head>\n\t\t<!-- Do NOT link to your javascript here -->\n\t</head>\n\t<body>\n\n\t\t<script src=\"PATH_TO_YOUR_JS_FILE\"></script>\n\t</body>\n</html>\n```\n\n**NOTE the `<script>` tag**\n\n1. This is a new tag we have never seen before; remember that the `<link>` tag is for CSS files and the `<script>` tag is for javascript files (for now).\n2. the `src` attribute is what we use to link to the external js file\n3. remember to CLOSE your script tag, unlike the `<link>` tag, `<script>` is NOT self closing!\n\n**Commenting + ( basic debugging of ) code in JavaScript**\n\n```js\n\n// this is an inline comment\n\nconsole.log('You can write debugging statements like so');\n\n/*\n\tthis\n\t\tis\n\t\t\ta\n\t\t\t\tmultilined\n\t\t\t\t\t\tcomment\n*/\n```\n#### Types of Variables\n---\n\nA variable type is a way to classify the different kinds of data we can save to a variable. There are exactly 6 types of variables:\n\n#### Primitives\n\n* `undefined`\n* `null`\n* boolean\n* number\n* string\n\n#### Non Primitive\n\n* Object\n\n### Primitives\n\nA Primitive type is a most basic bit of information that you can store. For example, a number is a primitive because it cannot be made up of any of the other types of variables\n\n<strong>Alternate definition</strong>: Think of this as an atom -- atoms are atoms because we cannot break them down into any more basic bits, same goes for primitives\n\n#### `undefined`\n\nUndefined is the default state of any variable. Basically means the variable is empty or has not yet been assigned a value, primitive or otherwise\n\n#### `null`\n\nThe null variable is different from the `undefined` type, but only subtly so.\n\n1. the `null` type is assigned to a variable, but its \"value\" is empty.\n2. the `undefined` type is by default the value of each variable that is declared but not defined\n3. &#35;esoteric\n\n**[Example](http://fewd.us/howdoi/#/problem/5131)**\n\n#### Booleans\n\nTrue or false. Basically.\n\n```javascript\nvar myBooleanValue = true; // true\nvar myBooleanValueThatIsFalse = false; // false\nconsole.log( typeof myBooleanValue );\n```\n\n#### Numbers\n\nNumeric values that can be operated upon via the standard rules of arithmetic.\n\n```javascript\nvar myNumber = 1;\nvar pi = 3.14159; // ...approximately\n```\n\n\n#### Strings\n\nThis one is interesting, we use this to represent text. Anything between the quotations (double or single, doesn't matter as long as you are consistent) is treated as a number.\n\nSo...\n\n```javascript\nvar myName = 'Taq Karim';\nvar dudeThisIsAString = '105';\n\nvar doubleQuotesRCool2 = \"Look ma! I'm double quoted\";\n```\n\n### Non-Primitives or: how I learned to stop worrying and Love the Object.\n\nObjects are the bees-knees yo.\n\n<div>Seriously.</div>\n\n<strong>Objects are a collection of properties where each property is a primitive type</strong>.\n\n#### In other words...\n```javascript\n// just primitives\nvar someNumber = 1;\nvar someBool = false;\nvar someNullItem = null;\n\n\n// as an object...\nvar myObject = {\n\tsomeNumber: 1\n\t, someBool: false\n\t, someNullItem: null\n}; // notice the use of \":\" instead of \"=\"\n\n// to access these items:\nconsole.log( myObject.someNumber );\nconsole.log( myObject.someBool );\n```\n","idx":7},"__list__":["home","title","desc","frontend-frameworks","grids","resume-lab","styling-for-various-screens","javascript-basics"]}